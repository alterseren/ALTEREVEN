# handlers/user.py - –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥—ñ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ 
from aiogram import Router, F
from aiogram.types import Message

from database.db import Database
from utils.cache import Cache
from keyboards.reply import get_main_keyboard


async def profile_cmd(message: Message, db: Database, cache: Cache):
    user_id = message.from_user.id
    
    cache_key = f"user_profile:{user_id}"
    user_data = cache.get(cache_key)
    
    if not user_data:
        user_data = db.get_user(user_id)
        if user_data:
            cache.set(cache_key, user_data, ttl=600)
    
    if user_data:
        profile_text = f"""
        üë§ –í–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:
        ID: {user_data['user_id']}
        –Ü–º'—è: {user_data['first_name']}
        {f"–ü—Ä—ñ–∑–≤–∏—â–µ: {user_data['last_name']}" if user_data['last_name'] else ""}
        {f"Username: @{user_data['username']}" if user_data['username'] else ""}
        –î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: {user_data['registered_at']}
        """
        await message.answer(profile_text)
    else:
        await message.answer("–í–∏ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó.")


async def profile_button(message: Message, db: Database, cache: Cache):
    if message.text == "üë§ –ü—Ä–æ—Ñ—ñ–ª—å":
        await profile_cmd(message, db, cache)


async def info_button(message: Message):
    if message.text == "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è":
        await message.answer("–¶–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π –±–æ—Ç –Ω–∞ aiogram –∑ SQLite —Ç–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è–º.")


async def contacts_button(message: Message):
    if message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        await message.answer("–î–ª—è –∑–≤'—è–∑–∫—É: example@example.com")


def register_user_handlers(router: Router):
    router.message.register(profile_button, F.text == "üë§ –ü—Ä–æ—Ñ—ñ–ª—å")
    router.message.register(info_button, F.text == "‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è")
    router.message.register(contacts_button, F.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")